package lab0.io_mechanics;

import java.awt.*;
import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author sophiaanderson Aug 29, 2018 10:21:14 AM
 */
public class MechanicsPanel extends javax.swing.JPanel {

    public MechanicsPanel() {
        initComponents();
        setLayout(null);
        setVisible(true);
    }

    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.fillOval(100,100,100,100);            // Just checking!
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        Load = new javax.swing.JButton();
        save = new javax.swing.JButton();
        list = new javax.swing.JButton();
        echoAll = new javax.swing.JButton();

        setLayout(null);

        TextArea.setColumns(20);
        TextArea.setRows(5);
        jScrollPane1.setViewportView(TextArea);

        add(jScrollPane1);
        jScrollPane1.setBounds(4, 44, 590, 320);

        Load.setText("Load");
        Load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadActionPerformed(evt);
            }
        });
        add(Load);
        Load.setBounds(110, 10, 97, 29);

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        add(save);
        save.setBounds(400, 10, 88, 29);

        list.setText("List Directory");
        list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listActionPerformed(evt);
            }
        });
        add(list);
        list.setBounds(240, 10, 120, 29);

        echoAll.setText("Echo All");
        echoAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                echoAllActionPerformed(evt);
            }
        });
        add(echoAll);
        echoAll.setBounds(250, 370, 95, 29);
    }// </editor-fold>//GEN-END:initComponents

    private void LoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadActionPerformed
        TextArea.selectAll();
        TextArea.replaceSelection("");
        echoFile();
    }//GEN-LAST:event_LoadActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        saveFile();
    }//GEN-LAST:event_saveActionPerformed

    private void listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listActionPerformed
        listDirectory();
    }//GEN-LAST:event_listActionPerformed

    private void echoAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_echoAllActionPerformed
        echoAll();
    }//GEN-LAST:event_echoAllActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Load;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JButton echoAll;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton list;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables

    private void echoFile() {
        MyReader mr = new MyReader();
        StringList list = new StringList();
        while (mr.hasMoreData()){
            TextArea.append(mr.giveMeTheNextLine() + "\n");
        }
        mr.close();
    }
    
    Boolean DEBUG = true;
    
    void listDirectory() {
        File directory = new File("./src/lab0/io_mechanics");
        System.out.println("directory = " + directory.getAbsolutePath());

        for (File nextFile : directory.listFiles()) {
            if (nextFile.isFile()) {
                System.out.println("reading... well... i would be if...." + nextFile);
            }
        }
    }
    
    void echoAll() {
        File directory = new File("/Users/sophiaanderson/Desktop/2018-2019/Machine Learning/Labs/Lab1-Perceptron/ptronData/pi");
        System.out.println("directory = " + directory.getAbsolutePath());
        String ROOT_DIR = ""+ directory.getAbsolutePath();
        
        PatternList patterns = inputData(new File(ROOT_DIR));
        TextArea.append("Listing " + ROOT_DIR + "\n\n" + patterns.toString());
    }
    
    public PatternList inputData(File directory) {
        PatternList patterns = new PatternList();

        if (DEBUG) {
            System.out.println("\nInputting from: " + directory + "\n");
        }
        java.io.File[] list = directory.listFiles();
        for (int i = 0; i < list.length; i++) {
            if (list[i].isFile()) {
                if (DEBUG) {
                    System.out.println("reading... " + list[i]);
                }
                patterns.add(new Pattern(list[i].getAbsolutePath()));
            }
            else System.out.println("list[i] = " + list[i] + " is NOT a file!");
        }
        
        return patterns;
    }

    private void saveFile() {
        MyWriter mw = new MyWriter();
        String contents = TextArea.getText();
        mw.print(contents);
        mw.close();
        
    }
}

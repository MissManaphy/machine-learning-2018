package perceptron;

import java.awt.*;

/**
 *
 * @author sophiaanderson Aug 31, 2018 10:30:08 AM
 */
public class PerceptronPanel extends javax.swing.JPanel {
    
    PTron runner;

    public PerceptronPanel() {
        initComponents();
        setLayout(null);
        setVisible(true);
        setup();
    }
    
    public void setup()
    {
        runner = new PTron();
        //set verbose to what it is at the beginning
    }

    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.fillOval(100,100,100,100);            // Just checking!
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        nextPattern = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        singleRun = new javax.swing.JButton();
        multiRun = new javax.swing.JButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setLayout(null);

        nextPattern.setText("Next");
        nextPattern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPatternActionPerformed(evt);
            }
        });
        add(nextPattern);
        nextPattern.setBounds(490, 10, 97, 29);

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane2.setViewportView(textArea);

        add(jScrollPane2);
        jScrollPane2.setBounds(20, 50, 560, 500);

        singleRun.setText("Single Run");
        singleRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleRunActionPerformed(evt);
            }
        });
        add(singleRun);
        singleRun.setBounds(60, 10, 130, 30);

        multiRun.setText("Multi Run");
        multiRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiRunActionPerformed(evt);
            }
        });
        add(multiRun);
        multiRun.setBounds(240, 10, 97, 29);
    }// </editor-fold>//GEN-END:initComponents

    private void nextPatternActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextPatternActionPerformed
        //empty
    }//GEN-LAST:event_nextPatternActionPerformed

    private void singleRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleRunActionPerformed
        runner.run();
        singleRun();
    }//GEN-LAST:event_singleRunActionPerformed

    private void multiRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiRunActionPerformed
        textArea.setText("");
        for(int i = 0; i < 8; i++)
        {
            runner.clearMatrix();
            runner.setTheta((int)(Math.pow(10, i)));
            runner.run();
            multiRun();
        }
    }//GEN-LAST:event_multiRunActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton multiRun;
    private javax.swing.JButton nextPattern;
    private javax.swing.JButton singleRun;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables


    void reset() {
        setup();
        textArea.setText("Please choose options to get started");
    }

    void setZ() {
        setup();
        runner.setZPath();
    }

    void setPi() {
        setup();
        runner.setPiPath();
    }

    void setW() {
        setup();
        runner.setwPath();
    }

    void setVerbose() {
        runner.setVerbose();
    }

    private void singleRun() {
        textArea.setText(runner.singleOutput());
    }

    private void multiRun() {
        textArea.append(runner.multiOutput() + "\n\n");
    }

}
